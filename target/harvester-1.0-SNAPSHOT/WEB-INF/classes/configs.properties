log4j.configurationFile=log4j2.xml
validationRulesFile=ValidationRules.xml
addEntryHBase=http://172.16.0.99:80/hbase/api/addHEntry
#create accepted node "it check if not exists and create it"
createNeo4jNode=http://172.16.0.161:80/eol/neo4j/createNode
# called only when create record in HBase
getNeo4jNode=http://172.16.0.161:80/eol/neo4j/getNode
# TODO remove it from the function that creates accepted node
getAcceptedNode=http://172.16.0.161:80/eol/neo4j/getAcceptedNode
#create parent "it check if not exists and create it"
createParentPlaceholder=http://172.16.0.161:80/eol/neo4j/createParentWithPlaceholder
createAncestor = http://172.16.0.161:80/eol/neo4j/createAncestorNode
createRelationBetweenNodeAndSynonym = http://172.16.0.161:80/eol/neo4j/createSynonymRelation
getSynonymNode = http://172.16.0.161:80/eol/neo4j/getSynonymNode
#any creation will check if node exits and ten create it


logging.level.org.bibalex.eol.harvester.*= DEBUG
logging.level.org.springframework.web= DEBUG

#logging.file=/home/hduser/eol/workspace/docsUploadedTest/myapp.log
#logging.config=/home/hduser/eol/workspace/docsUploadedTest/myapp2.log

#storage.layer.api.url=http://localhost:8010/eol/archiver
storage.layer.api.url=http://172.16.0.99/eol/archiver
#local
storage.output.directory=/home/a-amorad/eol_workspace/originals
#storage.dwca.directory=/home/ba/kak


download.resource.url=/downloadResource/{resId}/{isOrg}/{isNew}
download.var1=resId
download.var2=isOrg
download.var3=isNew


upload.resource.url=/uploadResource/{resId}/{isOrg}
upload.var1=resId
upload.var2=isOrg

media.resource.url=/downloadMedia/{resId}
media.var1=resId

proxyExists=false
proxy=proxy.local.bibalex.dom
port=8002
proxyUserName2=DLClient
password2=TUi54App_N4109in


proxyUserName =
password = 




